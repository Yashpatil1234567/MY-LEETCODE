/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode *getIntersectionNode(struct ListNode *headA, struct ListNode *headB) {
    if (!headA || !headB) return NULL;

    // Calculate the lengths of both lists
    struct ListNode *list1 = headA;
    struct ListNode *list2 = headB;
    int length1 = 0, length2 = 0;

    while (list1) {
        length1++;
        list1 = list1->next;
    }
    while (list2) {
        length2++;
        list2 = list2->next;
    }

    
    list1 = headA;
    list2 = headB;
    if (length1 > length2) {
        int skip = length1 - length2;
        for (int i = 0; i < skip; i++) {
            list1 = list1->next;
        }
    } else {
        int skip = length2 - length1;
        for (int i = 0; i < skip; i++) {
            list2 = list2->next;
        }
    }

    
    while (list1 && list2) {
        if (list1 == list2) {
            return list1;
        }
        list1 = list1->next;
        list2 = list2->next;
    }

    return NULL;  
}
